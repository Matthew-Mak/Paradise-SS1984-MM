# This is a basic workflow to help you get started with Actions

name: Turdis

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    branches: [master220, whitelist220]
  push:
    branches: [master220, whitelist220]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    name: Lints
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Cache SpacemanDMM
        uses: actions/cache@v1
        with:
          path: ~/SpacemanDMM
          key: ${{ runner.os }}-dreamchecker-${{ hashFiles('dependencies.sh')}}
          restore-keys: ${{ runner.os }}-dreamchecker

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Setup Rust
        uses: hecrj/setup-rust-action@v1.3.2

      - name: Install Dependencies
        run: |
          wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
          tools/travis/install_build_tools.sh
          tools/travis/install_spaceman_dmm.sh dreamchecker

      - name: Run Linters
        run: |
          tools/travis/check_filedirs.sh paradise.dme
          tools/travis/check_misc.sh

  compile:
    name: Compile All Maps
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt install libstdc++6:i386

      - name: Cache BYOND
        uses: actions/cache@v1
        with:
          path: ~/BYOND
          key: ${{ runner.os }}-byond-${{ hashFiles('Dockerfile')}}
          restore-keys: ${{ runner.os }}-byond

      - name: Setup BYOND
        run: |
          tools/travis/install_byond.sh
          cd $GITHUB_WORKSPACE
          printenv
          echo "BYOND_SYSTEM=/home/runner/BYOND/byond" >> $GITHUB_ENV
          echo "/home/runner/BYOND/byond/bin" >> $GITHUB_PATH
          echo "LD_LIBRARY_PATH=/home/runner/BYOND/byond/bin:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "MANPATH=/home/runner/BYOND/byond/man:$MANPATH" >> $GITHUB_ENV

      - name: Compile All Maps
        run: |
          tools/travis/template_dm_generator.py
          tgui/bin/tgui --build
          tools/travis/dm.sh -DTRAVISBUILDING -DTRAVISTESTING -DALL_MAPS paradise.dme
  test:
    name: Compile and Run Tests
    runs-on: ubuntu-20.04
    services:
      mariadb:
       image: mariadb/server
       ports:
         - 3306:3306
       env:
        MARIADB_ALLOW_EMPTY_PASSWORD: yes

    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt install libstdc++6:i386 gcc-multilib g++-7 g++-7-multilib zlib1g:i386 libssl1.1 libssl1.1:i386 libtinfo-dev:i386

      - name: Cache BYOND
        uses: actions/cache@v1
        with:
          path: ~/BYOND
          key: ${{ runner.os }}-byond-${{ hashFiles('Dockerfile')}}
          restore-keys: ${{ runner.os }}-byond

      - name: Setup Environment
        run: |
          tools/travis/install_byond.sh
          echo "BYOND_SYSTEM=/home/runner/BYOND/byond" >> $GITHUB_ENV
          echo "/home/runner/BYOND/byond/bin" >> $GITHUB_PATH
          echo "LD_LIBRARY_PATH=/home/runner/BYOND/byond/bin:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "MANPATH=/home/runner/BYOND/byond/man:$MANPATH" >> $GITHUB_ENV
          cd $GITHUB_WORKSPACE
          tools/travis/install_rust_g.sh
          mysql -u root -h 127.0.0.1 -e 'CREATE DATABASE paradise_travis;'
          mysql -u root -h 127.0.0.1 paradise_travis < SQL/paradise_schema.sql
          mysql -u root -h 127.0.0.1 -e 'CREATE DATABASE paradise_travis_prefixed;'
          mysql -u root -h 127.0.0.1 paradise_travis_prefixed < SQL/paradise_schema_prefixed.sql

      - name: Compile
        run: |
          tgui/bin/tgui --build
          tools/travis/dm.sh -DTRAVISBUILDING paradise.dme || travis_terminate 1

      - name: Prepare Artifacts
        run: |
          mkdir artifacts
          cp paradise.dmb artifacts
          cp paradise.rsc artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: DMB + RSC
          path: ${{github.workspace}}/artifacts

